@tailwind base;
@tailwind components;
@tailwind utilities;

/* Glowing particles animation */
@keyframes fadeInOut {
  0% { opacity: 0; transform: translate(-50%, -50%) scale(0.2); }
  50% { opacity: 1; transform: translate(-50%, -50%) scale(1.2); }
  100% { opacity: 0; transform: translate(-50%, -50%) scale(0.5); }
}

:root {
  --foreground-rgb: 0, 0, 0;
  --background-start-rgb: 214, 219, 220;
  --background-end-rgb: 255, 255, 255;
  --mtg-card-width: 50mm;
  --mtg-card-height: 70mm;
  --mtg-card-aspect-ratio: calc(2.5 / 3.5);
  font-size: 14px;
}

/* Floating card animations */
@keyframes float1 {
  0%, 100% { transform: translateY(0) rotate(-5deg); }
  50% { transform: translateY(-10px) rotate(-5deg); }
}

@keyframes float2 {
  0%, 100% { transform: translateY(0) rotate(0deg); }
  50% { transform: translateY(-15px) rotate(0deg); }
}

@keyframes float3 {
  0%, 100% { transform: translateY(0) rotate(5deg); }
  50% { transform: translateY(-12px) rotate(5deg); }
}

/* Booster pack animations */
@keyframes boosterExplosion {
  0% { transform: scale(0.8); opacity: 0.9; }
  10% { transform: scale(1.2); opacity: 1; }
  20% { transform: scale(0.9); opacity: 0.9; }
  30% { transform: scale(1.1); opacity: 1; }
  40% { transform: scale(1); opacity: 0.9; }
  50% { transform: scale(20); opacity: 0; }
  100% { transform: scale(50); opacity: 0; }
}

@keyframes boosterGlow {
  0% { box-shadow: 0 0 10px 5px rgba(255, 215, 0, 0.5); }
  50% { box-shadow: 0 0 30px 15px rgba(255, 215, 0, 0.8); }
  100% { box-shadow: 0 0 10px 5px rgba(255, 215, 0, 0.5); }
}

/* Pack shine animation */
@keyframes packShine {
  0% { background-position: -200% 0; }
  100% { background-position: 200% 0; }
}

/* Pack glow animation */
@keyframes packGlow {
  0% { box-shadow: 0 0 20px 5px rgba(255, 215, 0, 0.3); }
  50% { box-shadow: 0 0 30px 10px rgba(255, 215, 0, 0.5); }
  100% { box-shadow: 0 0 20px 5px rgba(255, 215, 0, 0.3); }
}

/* Pack shake animation */
@keyframes shake {
  0%, 100% { transform: translateX(0) translateY(0) rotate(0deg); }
  10% { transform: translateX(-10px) translateY(-5px) rotate(-2deg); }
  20% { transform: translateX(8px) translateY(3px) rotate(2deg); }
  30% { transform: translateX(-12px) translateY(-7px) rotate(-3deg); }
  40% { transform: translateX(12px) translateY(5px) rotate(3deg); }
  50% { transform: translateX(-15px) translateY(-8px) rotate(-4deg); }
  60% { transform: translateX(15px) translateY(8px) rotate(4deg); }
  70% { transform: translateX(-18px) translateY(-10px) rotate(-5deg); }
  80% { transform: translateX(18px) translateY(10px) rotate(5deg); }
  90% { transform: translateX(-20px) translateY(-12px) rotate(-6deg); }
}

/* Pack explosion animation */
@keyframes packExplosion {
  0% { 
    transform: scale(1); 
    opacity: 0.8; 
    filter: brightness(1) blur(0px);
  }
  5% { 
    transform: scale(1.1); 
    opacity: 1; 
    filter: brightness(1.8) blur(0px);
  }
  15% { 
    transform: scale(1.3) rotate(2deg); 
    opacity: 1; 
    filter: brightness(2.5) blur(1px);
  }
  25% { 
    transform: scale(1.5) rotate(-3deg); 
    opacity: 0.9; 
    filter: brightness(3) blur(3px);
  }
  35% { 
    transform: scale(1.8) rotate(5deg); 
    opacity: 0.8; 
    filter: brightness(4) blur(5px);
  }
  45% { 
    transform: scale(2.2) rotate(-5deg); 
    opacity: 0.7; 
    filter: brightness(5) blur(8px);
  }
  60% { 
    transform: scale(2.6) rotate(0deg); 
    opacity: 0.5; 
    filter: brightness(6) blur(12px);
  }
  80% { 
    transform: scale(3.2); 
    opacity: 0.3; 
    filter: brightness(6) blur(15px);
  }
  100% { 
    transform: scale(4); 
    opacity: 0; 
    filter: brightness(7) blur(20px);
  }
}

/* Pack fragments animation */
@keyframes packFragment {
  0% { 
    transform: translate(0, 0) rotate(0deg) scale(1); 
    opacity: 1;
    filter: brightness(2);
  }
  20% {
    transform: translate(calc(var(--x) * 0.3), calc(var(--y) * 0.3)) rotate(calc(var(--r) * 0.3)) scale(0.9);
    opacity: 0.9;
    filter: brightness(1.8);
  }
  50% {
    transform: translate(calc(var(--x) * 0.6), calc(var(--y) * 0.6)) rotate(calc(var(--r) * 0.6)) scale(0.7);
    opacity: 0.7;
    filter: brightness(1.5);
  }
  100% { 
    transform: translate(var(--x), var(--y)) rotate(var(--r)) scale(0.2); 
    opacity: 0;
    filter: brightness(1.2);
  }
}

/* Pack light burst animation */
@keyframes packLightBurst {
  0% { width: 0; height: 0; opacity: 0; }
  10% { width: 40px; height: 40px; opacity: 1; }
  30% { width: 160px; height: 160px; opacity: 0.9; }
  60% { width: 280px; height: 280px; opacity: 0.6; }
  100% { width: 480px; height: 480px; opacity: 0; }
}

/* Magical energy burst animation */
@keyframes magicalEnergyBurst {
  0% { width: 0; height: 0; opacity: 0; }
  10% { width: 40px; height: 40px; opacity: 0.9; }
  30% { width: 160px; height: 160px; opacity: 0.8; }
  60% { width: 400px; height: 400px; opacity: 0.6; }
  100% { width: 800px; height: 800px; opacity: 0; }
}

/* Card fly out animation */
@keyframes cardFlyOut {
  0% { 
    opacity: 0; 
    transform: scale(0.8) translateY(0) rotate(0deg); 
  }
  20% { 
    opacity: 1; 
    transform: scale(1.1) translateY(-50px) rotate(5deg); 
  }
  40% { 
    transform: scale(1.05) translateY(-100px) rotate(-2deg); 
  }
  60% { 
    transform: scale(1) translateY(-150px) rotate(1deg); 
  }
  80% { 
    transform: scale(0.95) translateY(-200px) rotate(-1deg); 
  }
  100% { 
    transform: scale(0.9) translateY(-250px) rotate(0deg); 
    opacity: 0;
  }
}

/* Card glow animation */
@keyframes cardGlow {
  0% { box-shadow: 0 0 15px 2px rgba(255, 255, 255, 0.3); }
  50% { box-shadow: 0 0 25px 5px rgba(255, 255, 255, 0.6); }
  100% { box-shadow: 0 0 15px 2px rgba(255, 255, 255, 0.3); }
}

/* Pack flap opening animations */
@keyframes packTopOpen {
  0% { transform: rotateX(0deg) translateZ(0); clip-path: polygon(0 0, 100% 0, 100% 100%, 0 100%); }
  10% { transform: rotateX(-15deg) translateZ(5px); clip-path: polygon(0 0, 30% 5%, 70% 0%, 100% 8%, 100% 100%, 0 100%); }
  20% { transform: rotateX(-30deg) translateZ(8px); clip-path: polygon(0 0, 20% 10%, 50% 5%, 80% 15%, 100% 5%, 100% 100%, 0 100%); }
  30% { transform: rotateX(-45deg) translateZ(12px); clip-path: polygon(0 0, 10% 15%, 30% 10%, 50% 20%, 70% 10%, 90% 25%, 100% 5%, 100% 100%, 0 100%); }
  40% { transform: rotateX(-60deg) translateZ(15px); clip-path: polygon(0 0, 5% 20%, 20% 15%, 35% 25%, 50% 15%, 65% 30%, 80% 15%, 95% 25%, 100% 10%, 100% 100%, 0 100%); }
  50% { transform: rotateX(-90deg) translateZ(20px); clip-path: polygon(0 0, 0% 25%, 15% 20%, 25% 35%, 40% 20%, 55% 40%, 70% 25%, 85% 35%, 100% 15%, 100% 100%, 0 100%); }
  60% { transform: rotateX(-120deg) translateZ(15px); opacity: 0.9; }
  70% { transform: rotateX(-150deg) translateZ(10px); opacity: 0.7; }
  80% { transform: rotateX(-170deg) translateZ(5px); opacity: 0.5; }
  90% { transform: rotateX(-175deg) translateZ(0); opacity: 0.3; }
  100% { transform: rotateX(-180deg) translateZ(-10px); opacity: 0; }
}

@keyframes packBottomOpen {
  0% { transform: rotateX(0deg) translateZ(0); }
  20% { transform: rotateX(30deg) translateZ(5px); }
  40% { transform: rotateX(60deg) translateZ(10px); }
  60% { transform: rotateX(120deg) translateZ(15px); }
  80% { transform: rotateX(150deg) translateZ(10px); }
  100% { transform: rotateX(180deg) translateZ(0); }
}

@keyframes packSideLeftOpen {
  0% { transform: rotateY(0deg) translateZ(0); }
  20% { transform: rotateY(30deg) translateZ(5px); }
  40% { transform: rotateY(60deg) translateZ(10px); }
  60% { transform: rotateY(90deg) translateZ(15px); }
  80% { transform: rotateY(120deg) translateZ(10px); }
  100% { transform: rotateY(150deg) translateZ(0); }
}

@keyframes packSideRightOpen {
  0% { transform: rotateY(0deg) translateZ(0); }
  20% { transform: rotateY(-30deg) translateZ(5px); }
  40% { transform: rotateY(-60deg) translateZ(10px); }
  60% { transform: rotateY(-90deg) translateZ(15px); }
  80% { transform: rotateY(-120deg) translateZ(10px); }
  100% { transform: rotateY(-150deg) translateZ(0); }
}

@keyframes packContentRise {
  0% { transform: translateY(0) scale(0.8); opacity: 0.5; }
  30% { transform: translateY(-10px) scale(0.9); opacity: 0.7; }
  60% { transform: translateY(-20px) scale(0.95); opacity: 0.8; }
  100% { transform: translateY(-30px) scale(1); opacity: 1; }
}

@keyframes packFadeOut {
  0% { opacity: 1; }
  100% { opacity: 0; }
}

@keyframes cardReveal {
  0% { transform: scale(0) rotate(180deg); opacity: 0; }
  40% { transform: scale(1.3) rotate(10deg); opacity: 1; }
  60% { transform: scale(1.1) rotate(-5deg); opacity: 1; }
  80% { transform: scale(1.05) rotate(2deg); opacity: 1; }
  100% { transform: scale(1) rotate(0deg); opacity: 1; }
}

/* 3D Perspective classes */
.perspective-1000 {
  perspective: 1000px;
}

/* Booster pack opening animations */
@keyframes packTopOpen {
  0% { transform: rotateX(0deg) translateZ(0); transform-origin: bottom; }
  20% { transform: rotateX(-30deg) translateZ(5px); transform-origin: bottom; }
  60% { transform: rotateX(-150deg) translateZ(10px); transform-origin: bottom; }
  80% { transform: rotateX(-170deg) translateZ(5px); transform-origin: bottom; }
  100% { transform: rotateX(-180deg) translateZ(0); transform-origin: bottom; }
}

@keyframes packBottomOpen {
  0% { transform: rotateX(0deg) translateZ(0); transform-origin: top; }
  20% { transform: rotateX(30deg) translateZ(5px); transform-origin: top; }
  60% { transform: rotateX(150deg) translateZ(10px); transform-origin: top; }
  80% { transform: rotateX(170deg) translateZ(5px); transform-origin: top; }
  100% { transform: rotateX(180deg) translateZ(0); transform-origin: top; }
}

@keyframes packSideLeftOpen {
  0% { transform: rotateY(0deg) translateZ(0); transform-origin: right; }
  30% { transform: rotateY(-30deg) translateZ(5px); transform-origin: right; }
  70% { transform: rotateY(-70deg) translateZ(10px); transform-origin: right; }
  85% { transform: rotateY(-85deg) translateZ(5px); transform-origin: right; }
  100% { transform: rotateY(-90deg) translateZ(0); transform-origin: right; }
}

@keyframes packSideRightOpen {
  0% { transform: rotateY(0deg) translateZ(0); transform-origin: left; }
  30% { transform: rotateY(30deg) translateZ(5px); transform-origin: left; }
  70% { transform: rotateY(70deg) translateZ(10px); transform-origin: left; }
  85% { transform: rotateY(85deg) translateZ(5px); transform-origin: left; }
  100% { transform: rotateY(90deg) translateZ(0); transform-origin: left; }
}

@keyframes packContentRise {
  0% { transform: translateY(0) scale(0.9); opacity: 0.3; }
  20% { transform: translateY(-10px) scale(0.95); opacity: 0.6; }
  60% { transform: translateY(-30px) scale(1.05); opacity: 0.8; }
  80% { transform: translateY(-45px) scale(1.02); opacity: 0.9; }
  100% { transform: translateY(-50px) scale(1); opacity: 1; }
}

@keyframes packFadeOut {
  0% { opacity: 1; transform: scale(1); }
  50% { opacity: 0.5; transform: scale(1.1); }
  100% { opacity: 0; transform: scale(1.2); }
}

@keyframes packGlow {
  0% { box-shadow: 0 0 10px 2px rgba(255, 215, 0, 0.3); }
  50% { box-shadow: 0 0 20px 5px rgba(255, 215, 0, 0.6); }
  100% { box-shadow: 0 0 10px 2px rgba(255, 215, 0, 0.3); }
}

@keyframes packShine {
  0% { background-position: -100% 0; }
  100% { background-position: 200% 0; }
}

/* Hide React DevTools and other development overlays */
#react-devtools-hook,
#react-root + div,
#root ~ div:last-child,
div[data-testid="devtools"],
.react-devtools-portal,
.react-devtools-inline,
.react-devtools-hook,
div[style*="z-index: 99999"],
div[style*="position: fixed"][style*="bottom: 0"][style*="right: 0"],
div[style*="background-color: rgb(135, 73, 243)"] {
  display: none !important;
  visibility: hidden !important;
  opacity: 0 !important;
  pointer-events: none !important;
}

@keyframes fadeIn {
  0% { opacity: 0; }
  100% { opacity: 1; }
}

@keyframes shimmer {
  0% { background-position: -200% center; }
  100% { background-position: 200% center; }
}

@keyframes boosterSpin {
  0% { transform: rotate(0deg) scale(1); }
  50% { transform: rotate(180deg) scale(1.5); }
  100% { transform: rotate(360deg) scale(1); }
}

.dark {
  --foreground-rgb: 255, 255, 255;
  --background-start-rgb: 0, 0, 0;
  --background-end-rgb: 0, 0, 0;
}

body {
  color: rgb(var(--foreground-rgb));
  background: linear-gradient(
      to bottom,
      transparent,
      rgb(var(--background-end-rgb))
    )
    rgb(var(--background-start-rgb));
}

@layer components {
  .card-hover {
    @apply transition-transform duration-300 hover:scale-105 hover:shadow-md cursor-pointer;
  }
  
  /* Hide scrollbar on booster cards container while maintaining scroll functionality */
  .booster-cards-container {
    scrollbar-width: none; /* Firefox */
    -ms-overflow-style: none; /* IE and Edge */
  }
  
  .booster-cards-container::-webkit-scrollbar {
    display: none; /* Chrome, Safari, Edge */
  }
  
  .compact-ui {
    @apply text-sm;
  }
  
  .nav-link {
    @apply px-4 py-2 rounded-md transition-colors duration-200 hover:bg-gray-700 hover:text-white;
  }
  
  .btn-primary {
    @apply px-4 py-2 bg-mtg-blue text-white rounded-md hover:bg-blue-700 transition-colors duration-200;
  }
  
  .btn-secondary {
    @apply px-4 py-2 bg-gray-700 text-white rounded-md hover:bg-gray-600 transition-colors duration-200;
  }

  .mtg-card {
    @apply rounded-lg overflow-hidden shadow-md;
    aspect-ratio: 2.5/3.5;
    width: 100%;
    max-width: var(--mtg-card-width);
    height: auto;
  }
  
  @media (max-width: 640px) {
    .mtg-card {
      min-width: 120px;
      min-height: 168px;
    }
  }

  .mtg-card-image {
    @apply w-full h-full object-cover;
    aspect-ratio: 2.5/3.5;
  }

  .mtg-card-grid {
    @apply grid gap-4;
    grid-template-columns: repeat(auto-fill, minmax(min(100%, var(--mtg-card-width)), 1fr));
  }

  .mtg-card-detail {
    width: 100%;
    max-width: calc(var(--mtg-card-width) * 1.5);
    aspect-ratio: 2.5/3.5;
    @apply mx-auto;
  }

  .fixed-card-size {
    aspect-ratio: var(--mtg-card-aspect-ratio);
    width: auto;
    height: auto;
    max-width: 100%;
    max-height: calc(var(--mtg-card-height) * 1.5);
    @apply mx-auto;
  }
  
  @media (min-width: 768px) {
    .fixed-card-size {
      width: calc(var(--mtg-card-width) * 1.2);
      height: calc(var(--mtg-card-height) * 1.2);
      object-fit: contain;
    }
  }
  
  @media (max-width: 767px) {
    .fixed-card-size {
      width: 85%;
      max-width: calc(var(--mtg-card-width) * 1.2);
    }
  }
  
  .booster-fullscreen {
    @apply fixed inset-0 z-50 flex items-center justify-center bg-black/90;
  }
  
  .booster-pack {
    @apply relative rounded-lg overflow-hidden cursor-pointer transition-all duration-300;
  }
  
  .booster-pack-active {
    @apply hover:scale-105;
  }
  
  .booster-explosion {
    @apply absolute inset-0 rounded-full bg-gradient-to-r from-mtg-red via-mtg-blue to-mtg-green;
    animation: boosterExplosion 2s forwards;
  }
  
  .booster-card {
    animation: cardReveal 0.5s forwards;
    animation-fill-mode: both;
  }
  
  .shimmer-effect {
    background: linear-gradient(90deg, 
      rgba(255,255,255,0) 0%, 
      rgba(255,255,255,0.2) 25%, 
      rgba(255,255,255,0.2) 50%, 
      rgba(255,255,255,0) 100%);
    background-size: 200% 100%;
    animation: shimmer 1.5s infinite;
  }
  
  .booster-spinner {
    animation: boosterSpin 2s ease-in-out;
  }
}

